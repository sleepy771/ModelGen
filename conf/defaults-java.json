{
  "@Object": {
    "methods": [
      {
        "name": "newInstance",
        "variables": ["${L:args}"],
        "code": "new ${CLASS}(${args})",
        "m_type": "class"
      },
      {
        "name": "getClassDefinition",
        "code": "${THIS}.getClass()",
        "m_type": "instance"
      },
      {
        "name": "equals",
        "variables": ["$1"],
        "code": "${THIS}.equals($1)",
        "m_type": "instance"
      },
      {
        "name": "hashCode",
        "code": "${THIS}.hashCode()",
        "m_type": "instance"
      }
    ]
  },
  "@Comparable": {
    "methods": [
      {
        "name": "gt",
        "variables": ["$2"],
        "code": "${THIS}.compareTo($2) > 0",
        "m_type": "instance"
      },
      {
        "name": "ge",
        "variables": ["$2"],
        "code": "${THIS}.compareTo($2) >= 0",
        "m_type": "instance"
      },
      {
        "name": "eq",
        "variables": ["$2"],
        "code": "${THIS}.compareTo($2) == 0",
        "m_type": "instance"
      },
      {
        "name": "le",
        "variables": ["$2"],
        "code": "${THIS}.compareTo($2) <= 0",
        "m_type": "instance"
      },
      {
        "name": "lt",
        "variables": ["$2"],
        "code": "${THIS}.compareTo($2) < 0",
        "m_type": "instance"
      },
      {
        "name": "ne",
        "variables": ["$2"],
        "code": "${THIS}.compareTo($2) != 0",
        "m_type": "instance"
      }
    ]
  },
  "@String": {
    "methods": [
      {
        "name": "valueOf",
        "args_t": ["@me.sleepyprojects.modelgen.NumberDefinition"],
        "variables": ["$N"],
        "code": "String.valueOf($N)",
        "m_type": "static"
      },
      {
        "name": "charAt",
        "variables": ["$N"],
        "code": "${THIS}.charAt($N)",
        "m_type": "instance"
      },
      {
        "name": "indexOf",
        "variables": ["$S"],
        "code": "${THIS}.indexOf($S)",
        "m_type": "instance"
      },
      {
        "name": "contains",
        "variables": ["$S"],
        "code": "${THIS}.contains($S)",
        "m_type": "instance"
      },
      {
        "name": "startsWith",
        "variables": ["$S"],
        "code": "${THIS}.startsWith($S)",
        "m_type": "instance"
      },
      {
        "name": "endsWith",
        "variables": ["$S"],
        "code": "${THIS}.endsWith($S)",
        "m_type": "instance"
      }
    ]
  },
  "@Number": {
    "methods": [
      {
        "name": "valueOf",
        "variables": ["$S"],
        "code": "${CLASS}.valueOf($S)",
        "m_type": "class"
      },
      {
        "name": "add",
        "variables": ["$2"],
        "code": "${THIS} + $2",
        "m_type": "instance"
      },
      {
        "name": "sub",
        "variables": ["$2"],
        "code": "${THIS} - $2",
        "m_type": "instance"
      },
      {
        "name": "mul",
        "variables": ["$2"],
        "code": "${THIS} * $2",
        "m_type": "instance"
      },
      {
        "name": "div",
        "variables": ["$2"],
        "code": "${THIS} / $2",
        "m_type": "instance"
      },
      {
        "name": "mod",
        "variables": ["$2"],
        "code": "${THIS} % $2",
        "m_type": "instance"
      },
      {
        "name": "fdiv",
        "variables": ["$2"],
        "code": "((double) ${THIS}) / $2",
        "m_type": "instance"
      },
      {
        "name": "gt",
        "variables": ["$2"],
        "code": "${THIS} > $2",
        "m_type": "instance"
      },
      {
        "name": "ge",
        "variables": ["$2"],
        "code": "${THIS} >= $2",
        "m_type": "instance"
      },
      {
        "name": "eq",
        "variables": ["$2"],
        "code": "${THIS} == $2",
        "autoboxed": "${THIS}.equals($2)",
        "m_type": "instance"
      },
      {
        "name": "le",
        "variables": ["$2"],
        "code": "${THIS} <= $2",
        "m_type": "instance"
      },
      {
        "name": "lt",
        "variables": ["$2"],
        "code": "${THIS} < $2",
        "m_type": "instance"
      },
      {
        "name": "ne",
        "variables": ["$2"],
        "code": "${THIS} != $2",
        "autoboxed": "!${THIS}.equals($2)",
        "m_type": "instance"
      }
    ]
  },
  "@DataStruct": {
    "methods": [
      {
        "name": "size",
        "code": "${THIS}.size()",
        "m_type": "instance"
      },
      {
        "name": "contains",
        "variables": ["$1"],
        "code": "${THIS}.contains($1)",
        "m_type": "instance"
      }
    ]
  },
  "@Collection": {
    "methods": [
      {
        "name": "add",
        "variables": ["$1"],
        "code": "${THIS}.add($1)",
        "m_type": "instance"
      },
      {
        "name": "remove",
        "variables": ["$1"],
        "code": "${THIS}.remove($1)",
        "m_type": "instance"
      },
      {
        "name": "removeAll",
        "variables": ["$1"],
        "code": "${THIS}.removeAll($1)",
        "m_type": "instance"
      },
      {
        "name": "addAll",
        "variables": ["$1"],
        "code": "${THIS}.addAll($1)",
        "m_type": "instance"
      }
    ]
  },
  "@List": {
    "methods": [
      {
        "name": "get",
        "variables": ["$1"],
        "code": "${THIS}.get($1)",
        "m_type": "instance"
      }
    ]
  },
  "@Map": {
    "methods": [
      {
        "name": "get",
        "variables": ["$1"],
        "code": "${THIS}.get($1)",
        "m_type": "instance"
      },
      {
        "name": "remove",
        "variables": ["$1"],
        "code": "${THIS}.remove($1)",
        "m_type": "instance"
      },
      {
        "name": "put",
        "variables": ["$1", "$2"],
        "$code": "${THIS}.put($1, $2)",
        "m_type": "instance"
      }
    ]
  }
}